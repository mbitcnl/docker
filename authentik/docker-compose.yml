version: "3.8"

services:
  postgresql:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ${AUTHENTIK_BIND_POSTGRES:-./data/postgres}:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER:-authentik}
      POSTGRES_DB: ${PG_DB:-authentik}
    networks:
      - authentik-intern
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - ${AUTHENTIK_BIND_REDIS:-./data/redis}:/data
    networks:
      - authentik-intern
  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.12.2}
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
    # Basis Caddy config
    labels:
      - "caddy=${DNS_NAME}"
      # Reverse proxy configuratie
      - "caddy.reverse_proxy={{upstreams 9000}}"
      
      # Vereiste headers voor Authentik
      - "caddy.reverse_proxy.header_up=X-Forwarded-Proto {http.request.scheme}"
      - "caddy.reverse_proxy.header_up=X-Forwarded-For {http.request.remote.host}"
      - "caddy.reverse_proxy.header_up=Host {http.request.host}"
      - "caddy.reverse_proxy.header_up=Connection {http.request.header.Connection}"
      - "caddy.reverse_proxy.header_up=Upgrade {http.request.header.Upgrade}"
      
      # WebSocket support
      - "caddy.reverse_proxy.transport.protocol=http"
      - "caddy.reverse_proxy.transport.versions=1.1 2"
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_ERROR_REPORTING__ENABLED: "false"
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    volumes:
      - ${AUTHENTIK_BIND_MEDIA:-./data/media}:/media
      - ${AUTHENTIK_BIND_TEMPLATES:-./data/templates}:/templates
    ports:
      - "${COMPOSE_PORT_HTTP:-9000}:9000"
      - "${COMPOSE_PORT_HTTPS:-9443}:9443"
    networks:
      - authentik-intern
      - caddy-proxy
      - authentik-app-proxy
  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.12.2}
    command: worker
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 10s
      update_config:
        order: start-first
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${AUTHENTIK_BIND_MEDIA:-./data/media}:/media
      - ${AUTHENTIK_BIND_CERTS:-./data/certs}:/certs
      - ${AUTHENTIK_BIND_TEMPLATES:-./data/templates}:/templates
    networks:
      - authentik-intern

networks:
  authentik-intern:
    external: true
  caddy-proxy:
    external: true
  authentik-app-proxy:
    external: true  
