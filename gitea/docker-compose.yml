version: '3.8'

networks:
  gitea-intern:
    driver: overlay
    internal: true
  proxy-network:
    external: true
    name: caddy-network

services:
  server:
    image: docker.io/gitea/gitea:${GITEA_VERSION}
    hostname: gitea
    environment:
      - USER_UID=${USER_UID}
      - USER_GID=${USER_GID}
      - GITEA__database__DB_TYPE=${DB_TYPE}
      - GITEA__database__HOST=db:5432
      - GITEA__database__NAME=${DB_NAME}
      - GITEA__database__USER=${DB_USER}
      - GITEA__database__PASSWD=${DB_PASSWD}
      - GITEA__server__SSH_DOMAIN=${DNS_NAME}
      - GITEA__server__DOMAIN=${DNS_NAME}
      - GITEA__server__ROOT_URL=${DNS_NAME}
    networks:
      - gitea-intern
      - proxy-network
    volumes:
      - ${GITEA_DATA_PATH}:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "${SSH_PORT}:22"
    depends_on:
      - db
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - caddy: ${DNS_NAME}
        - caddy.reverse_proxy: "{{upstreams 3000}}"

  db:
    image: docker.io/library/postgres:14
    hostname: gitea-db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - gitea-intern
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager 