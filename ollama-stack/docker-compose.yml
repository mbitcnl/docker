version: "3.9"

services:
  ollama:
    image: ollama/ollama:latest
    deploy:
      mode: replicated
      replicas: 1  # Ollama draait als single instance voor model management
      labels:
        - "traefik.enable=true"
        # Router configuratie voor Ollama API
        - "traefik.http.routers.ollama-api.rule=Host(`${OLLAMA_API_DOMAIN}`)"
        - "traefik.http.routers.ollama-api.entrypoints=websecure"
        - "traefik.http.routers.ollama-api.tls=true"
        - "traefik.http.routers.ollama-api.tls.certresolver=default"
        # Service configuratie
        - "traefik.http.services.ollama-api.loadbalancer.server.port=11434"
        # Optionele beveiliging
        - "traefik.http.routers.ollama-api.middlewares=ip-allowlist@docker"
        - "traefik.http.middlewares.ip-allowlist.ipallowlist.sourcerange=${OLLAMA_API_ALLOWED_IPS}"
    networks:
      - ai-net
    volumes:
      - ${OLLAMA_DATA_PATH}:/root/.ollama  # Persistent storage voor models

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    environment:
      - OLLAMA_API_BASE_URL=http://ollama:11434/api
      - WEBUI_JWT_SECRET_KEY=${WEBUI_JWT_SECRET_KEY}
      - WEBUI_DB_PATH=/app/backend/data/database.db
      - WEBUI_AUTH=true
      - WEBUI_HOST=0.0.0.0
      - WEBUI_PORT=8080
      - WEBUI_DEBUG=false
      - LOG_LEVEL=info
      - WEBUI_APP_NAME=Open WebUI
      - WEBUI_ALLOW_REGISTRATION=true
      - WEBUI_SERVE_BASE_PATH=/
      - WEBUI_CORS_PROXY_ENABLED=true
      - WEBUI_CORS_PROXY_TIMEOUT=60
      - WEBUI_SECRET_KEY=${WEBUI_JWT_SECRET_KEY}
      - WEBUI_DEFAULT_USER=admin
      - WEBUI_DEFAULT_PASSWORD=admin
      - WEBUI_ENABLE_SIGNUP=
      - WEBUI_ENABLE_SOCIAL_LOGIN=false
    volumes:
      - ${OPENWEBUI_DATA_PATH}:/app/backend/data  # Gebruikt env variable voor volume path
    deploy:
      mode: replicated
      replicas: 1  # 3 replicas zoals gevraagd
      labels:
        - "traefik.enable=true"
        # Service definitie
        - "traefik.http.services.openwebui-service.loadbalancer.server.port=8080"
        # Router configuratie met SANs voor certificaat
        - "traefik.http.routers.openwebui.rule=Host(`${OPENWEBUI_DOMAIN}`)"
        - "traefik.http.routers.openwebui.entrypoints=websecure"
        - "traefik.http.routers.openwebui.tls=true"
        - "traefik.http.routers.openwebui.tls.certresolver=default"
        - "traefik.http.routers.openwebui.tls.domains[0].main=${OPENWEBUI_DOMAIN}"  # Dit forceert de certificaat aanvraag
        # Router configuratie
        - "traefik.http.routers.openwebui.rule=Host(`${OPENWEBUI_DOMAIN}`)"
        - "traefik.http.routers.openwebui.entrypoints=websecure"
        - "traefik.http.routers.openwebui.tls=true"
        - "traefik.http.routers.openwebui.tls.certresolver=default"
        - "traefik.http.routers.openwebui.service=openwebui-service"
        # HTTP router
        - "traefik.http.routers.openwebui-web.rule=Host(`${OPENWEBUI_DOMAIN}`)"
        - "traefik.http.routers.openwebui-web.entrypoints=web"
        - "traefik.http.routers.openwebui-web.service=openwebui-service"
    networks:
      - ai-net
      - traefik-proxy  # Verbinding met Traefik netwerk

networks:
  ai-net:
    driver: overlay
  traefik-proxy:
    external: true
    name: traefik_traefik-proxy

volumes:
  ollama_data:
    driver: local 
  open_webui_data:    # Nieuw volume toevoegen
    driver: local