## Deze config is alleen voor Docker Swarm

version: "3.9"

services:
  traefik:
    image: "traefik:${TRAEFIK_VERSION}"
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:${TRAEFIK_ENTRYPOINT_HTTP}"
      - "--entrypoints.websecure.address=:${TRAEFIK_ENTRYPOINT_HTTPS}"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik-proxy"
      - "--log.level=DEBUG"
      - "--log.filepath=/var/log/traefik.log"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/access.log"
      - "--certificatesresolvers.default.acme.httpchallenge=true"
      - "--certificatesresolvers.default.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.default.acme.email=${TRAEFIK_LETSENCRYPT_MAIL}"
      - "--certificatesresolvers.default.acme.storage=/letsencrypt/acme.json"
    ports:
      - target: ${TRAEFIK_ENTRYPOINT_HTTP}
        published: ${TRAEFIK_ENTRYPOINT_HTTP}
        mode: host
      - target: ${TRAEFIK_ENTRYPOINT_HTTPS}
        published: ${TRAEFIK_ENTRYPOINT_HTTPS}
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/nfs/portainer/traefik/letsencrypt:/letsencrypt"
      - "/nfs/portainer/traefik/logs:/var/log"
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - traefik-proxy
    environment:
      - TRAEFIK_ENTRYPOINT_HTTP=${TRAEFIK_ENTRYPOINT_HTTP}
      - TRAEFIK_ENTRYPOINT_HTTPS=${TRAEFIK_ENTRYPOINT_HTTPS}
      - TRAEFIK_PING=true
      - TRAEFIK_PING_ENTRYPOINT=traefik
      - TRAEFIK_ENTRYPOINTS_TRAEFIK_ADDRESS=:8082
      - TRAEFIK_API_INSECURE=true
    labels:
      - "traefik.enable=true"

      # Router configuratie voor het dashboard
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DASHBOARD_URL}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=default"
      - "traefik.http.routers.dashboard.tls.domains[0].main=${TRAEFIK_DASHBOARD_URL}"

      # Middleware koppelen (IPAllowList en Basic Auth)
      - "traefik.http.routers.dashboard.middlewares=ip-allowlist@docker,auth@docker"

      # IPAllowList Middleware
      - "traefik.http.middlewares.ip-allowlist.ipallowlist.sourcerange=${TRAEFIK_DASHBOARD_IPWITHLIST}"

      # Basic Auth Middleware
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_DASHBOARD_AUTH_USER}:${TRAEFIK_DASHBOARD_AUTH_PASSWORD_HASH}"

      # Rate Limit Middleware
      - "traefik.http.middlewares.dashboard-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.dashboard-ratelimit.ratelimit.burst=50"
      - "traefik.http.routers.dashboard.middlewares=ip-allowlist@docker,auth@docker,dashboard-ratelimit@docker"

    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/api/http/routers || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s

networks:
  traefik-proxy:
    external: true
    name: traefik-proxy
    driver: overlay
    attachable: true
    driver_opts:
      encrypted: "true"
